[{"C:\\Users\\laski\\OneDrive\\Dokumenty\\GitHub\\react-d3\\src\\index.js":"1","C:\\Users\\laski\\OneDrive\\Dokumenty\\GitHub\\react-d3\\src\\App.js":"2","C:\\Users\\laski\\OneDrive\\Dokumenty\\GitHub\\react-d3\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":4865,"mtime":1610962963104,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1xpp0h4",{"filePath":"11","messages":"12","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\laski\\OneDrive\\Dokumenty\\GitHub\\react-d3\\src\\index.js",[],["17","18"],"C:\\Users\\laski\\OneDrive\\Dokumenty\\GitHub\\react-d3\\src\\App.js",["19","20","21","22"],"import './App.css';\nimport React, { useRef, useEffect, useState } from 'react';\nimport { select, line, curveCardinal, axisBottom, scaleLinear, axisLeft, easeLinear } from 'd3'; \nimport * as d3 from 'd3'\n\nfunction App() {\n  const array = [\n    {\n      name: '2020',\n      yValues: [10, 20, 25, 30, 25, 45, 35],\n      xValues: [10, 20, 30, 40, 50, 60, 70],\n      color: '#999AD7'\n    },\n    {\n      name: '2019',\n      yValues: [21, 34, 15, 22, 35, 36, 41],\n      xValues: [10, 20, 30, 40, 50, 60, 70],\n      color: '#EB3472'\n    }\n  ]\n  \n  const [data, setData] = useState(array);\n\n  const updateData = evt => {\n    evt.preventDefault();\n    const inputData = evt.currentTarget.data.value;\n    let updatedData = inputData.split(';').map(dataset => dataset.split(',').map((item) => { return parseInt(item, 10)}))\n    // let updatedData = inputData.split(',').map((item) => {\n    //   return parseInt(item, 10);\n    //  });\n    console.log(updatedData);\n  }\n  const svgRef = useRef();\n\n  \n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(data);\n\n    let xMax = 0;\n    let xMin = 0;\n    let yMax = 0;\n    let yTicks = 0;\n    let xTicks = 0;\n\n    data.forEach(dataSet => {\n      const tempY = Math.max(...dataSet.yValues);\n      const tempX = Math.max(...dataSet.xValues);\n      const tempXMin = Math.min(...dataSet.xValues);\n      const tempYTicks = dataSet.yValues.length;\n      const tempXTicks = dataSet.xValues.length;\n\n      if (tempY > yMax) {\n        yMax = tempY;\n      }\n\n      if (tempX > xMax) {\n        xMax = tempX;\n      }\n\n      if (tempYTicks > yTicks) {\n        yTicks = tempYTicks\n      }\n\n      if (tempXTicks > xTicks) {\n        xTicks = tempXTicks;\n      }\n\n      if (tempXMin > xMin) {\n        xMin = tempXMin;\n      }\n    })\n\n    const xScale = scaleLinear()\n    .domain([xMin, xMax]) \n    .range([0, 600]); // 0px to 300px\n\n    const xAxis = axisBottom(xScale).ticks(xTicks).tickSize(0).tickPadding(15);\n\n    svg\n      .select('.x-axis')\n      .style('transform', 'translateY(300px)')\n      .call(xAxis);\n\n    const yScale = scaleLinear()\n      .domain([0, yMax])\n      .range([300, 0])\n      \n    const yAxis = axisLeft(yScale).ticks(yTicks).tickSize(0).tickPadding(15);\n\n    svg.select('.y-axis').call(yAxis);\n\n\n    const chartLine = line()\n    .x(function(d, index) { \n      console.log(d);\n      const i = ((index + 1) * xMax / xTicks)\n      return (xScale(i)); })\n    .y(d => {\n      return yScale(d);\n    })\n    .curve(curveCardinal);\n\n    data.forEach(dataSet => {\n      console.log(dataSet);\n\n      const linePath = svg\n      .selectAll('.line')\n      .data([dataSet.yValues])\n      .join('path')\n      .attr('d', chartLine)\n      .attr('class', `line${dataSet.name}`)\n      .attr('fill', 'none')\n      .attr('stroke', dataSet.color)\n      .attr(\"stroke-width\", 3)\n\n      // const linePathLength = linePath.node().getTotalLength()\n\n      // linePath\n      // .attr(\"stroke-dashoffset\", linePathLength)\n      // .attr(\"stroke-dasharray\", linePathLength)\n      // .transition()\n      // .ease(easeLinear)\n      // .duration(2000)\n      // .attr(\"stroke-dashoffset\", 0);\n\n      // const tooltip = d3.select(\"body\").append(\"div\")   \n      // .attr(\"class\", \"tooltip\")     \n      // .style('position', 'absolute')          \n      // .style(\"opacity\", 0)\n      // .style('background-color', 'rgb(248, 248, 248, .75)')\n      // .style('padding', '10px')\n      // .style('border-radius', '5px')\n      // .style('color', '#1D1531')\n      // .style('font-size', '11px')\n\n      // svg.selectAll(\".dot\")\n      // .data(data)\n      // .join(\"circle\")\n      // .attr(\"class\", \"dot\")\n      // .attr(\"cx\", chartLine.x())\n      // .attr(\"cy\", chartLine.y())\n      // .attr(\"r\", 4.5)\n      // .attr('stroke', '#999AD7')\n      // .attr(\"stroke-width\", 2)\n      // .on('mouseover', (event, d) => {  \n      //   console.log(d);\n      //   tooltip\n      //   .transition()\n      //   .duration(200)\n      //   .style(\"opacity\", .9);    \n\n\n      //   tooltip\n      //   .text(`Value: ${d}`)\n      //   .style(\"left\", (event.pageX) + \"px\")\n      //   .style(\"top\", (event.pageY) + \"px\");\n      // })\n      // .on('mouseout', d => {\n      //   tooltip.transition() .duration(500) .style(\"opacity\", 0);\n      // });\n\n      })\n    \n\n    \n  \n  }, [data])\n  return (\n    <>\n      <h1>React D3 Charts</h1>\n      <div class='chart-data'>\n        <h2>Chart Data</h2>\n        <form onSubmit={updateData}> \n          <label for='data'>Data #1</label>\n          <input type='text' name='data'></input>\n          <button type='submit'>Create</button>\n        </form>\n      </div>\n      <br></br><br></br>\n      <div className='chart'>\n        <h2>Chart Preview</h2>\n        <svg ref={svgRef}>\n          <g className='x-axis'></g>\n          <g className='y-axis'></g>\n        </svg>\n      </div>\n      \n      \n    </>\n  );\n}\n\n\nexport default App;\n","C:\\Users\\laski\\OneDrive\\Dokumenty\\GitHub\\react-d3\\src\\reportWebVitals.js",[],["23","24"],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":3,"column":74,"nodeType":"31","messageId":"32","endLine":3,"endColumn":84},{"ruleId":"29","severity":1,"message":"33","line":4,"column":13,"nodeType":"31","messageId":"32","endLine":4,"endColumn":15},{"ruleId":"29","severity":1,"message":"34","line":22,"column":16,"nodeType":"31","messageId":"32","endLine":22,"endColumn":23},{"ruleId":"29","severity":1,"message":"35","line":107,"column":13,"nodeType":"31","messageId":"32","endLine":107,"endColumn":21},{"ruleId":"25","replacedBy":"36"},{"ruleId":"27","replacedBy":"37"},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'easeLinear' is defined but never used.","Identifier","unusedVar","'d3' is defined but never used.","'setData' is assigned a value but never used.","'linePath' is assigned a value but never used.",["38"],["39"],"no-global-assign","no-unsafe-negation"]